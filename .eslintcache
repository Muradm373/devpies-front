[{"E:\\Devpies\\devpies\\src\\reportWebVitals.js":"1","E:\\Devpies\\devpies\\src\\reducers\\Reducer.jsx":"2","E:\\Devpies\\devpies\\src\\App.jsx":"3","E:\\Devpies\\devpies\\src\\components\\PatientHome.jsx":"4","E:\\Devpies\\devpies\\src\\components\\patient-components\\Sidebar.jsx":"5","E:\\Devpies\\devpies\\src\\utilities\\Routes.jsx":"6","E:\\Devpies\\devpies\\src\\components\\patient-components\\NavBar.jsx":"7","E:\\Devpies\\devpies\\src\\actions\\Actions.jsx":"8","E:\\Devpies\\devpies\\src\\components\\patient-components\\AIHelp.jsx":"9","E:\\Devpies\\devpies\\src\\components\\patient-components\\Appointments.jsx":"10","E:\\Devpies\\devpies\\src\\components\\patient-components\\About.jsx":"11","E:\\Devpies\\devpies\\src\\components\\patient-components\\Hospitals.jsx":"12","E:\\Devpies\\devpies\\src\\components\\patient-components\\Settings.jsx":"13","E:\\Devpies\\devpies\\src\\index.jsx":"14","E:\\Devpies\\devpies\\src\\dictionary\\deseases.jsx":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":379,"mtime":1610532953340,"results":"18","hashOfConfig":"17"},{"size":649,"mtime":1610531289773,"results":"19","hashOfConfig":"17"},{"size":1111,"mtime":1610534186231,"results":"20","hashOfConfig":"17"},{"size":2698,"mtime":1610533801015,"results":"21","hashOfConfig":"17"},{"size":1164,"mtime":1610534365332,"results":"22","hashOfConfig":"17"},{"size":4967,"mtime":1610537727676,"results":"23","hashOfConfig":"17"},{"size":84,"mtime":1610531289805,"results":"24","hashOfConfig":"17"},{"size":2710,"mtime":1610543403096,"results":"25","hashOfConfig":"17"},{"size":246,"mtime":1610533108463,"results":"26","hashOfConfig":"17"},{"size":4789,"mtime":1610538476382,"results":"27","hashOfConfig":"17"},{"size":237,"mtime":1610533108463,"results":"28","hashOfConfig":"17"},{"size":234,"mtime":1610533096485,"results":"29","hashOfConfig":"17"},{"size":777,"mtime":1610539812719,"results":"30","hashOfConfig":"17"},{"size":13004,"mtime":1610543153824,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"1168dp",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"34"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Devpies\\devpies\\src\\reportWebVitals.js",[],["64","65"],"E:\\Devpies\\devpies\\src\\reducers\\Reducer.jsx",[],"E:\\Devpies\\devpies\\src\\App.jsx",[],"E:\\Devpies\\devpies\\src\\components\\PatientHome.jsx",[],"E:\\Devpies\\devpies\\src\\components\\patient-components\\Sidebar.jsx",[],"E:\\Devpies\\devpies\\src\\utilities\\Routes.jsx",[],"E:\\Devpies\\devpies\\src\\components\\patient-components\\NavBar.jsx",["66","67","68","69","70","71"],"import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  NavbarBrand,\r\n  Nav,\r\n  NavItem,\r\n  Dropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n  Container,\r\n  InputGroup,\r\n  InputGroupText,\r\n  InputGroupAddon,\r\n  Input,\r\n} from \"reactstrap\";\r\n\r\nimport { routes } from \"../../utilities/Routes\";\r\n\r\nclass NavBar extends React.Component {\r\n  state = {\r\n    isOpen: false,\r\n    dropdownOpen: false,\r\n    color: \"transparent\",\r\n  };\r\n  sidebarToggle = React.createRef();\r\n  toggle = () => {\r\n    if (this.state.isOpen) {\r\n      this.setState({\r\n        color: \"transparent\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        color: \"white\",\r\n      });\r\n    }\r\n    this.setState({\r\n      isOpen: !this.state.isOpen,\r\n    });\r\n  };\r\n  dropdownToggle = (e) => {\r\n    this.setState({\r\n      dropdownOpen: !this.state.dropdownOpen,\r\n    });\r\n  };\r\n  //   getBrand = () => {\r\n  //     var name;\r\n  //     {Object.keys(this.props.routes).map((prop, key) => {\r\n  //       if (prop.collapse) {\r\n  //         prop.views.map((prop, key) => {\r\n  //           if (prop.path === this.props.location.pathname) {\r\n  //             name = prop.name;\r\n  //           }\r\n  //           return null;\r\n  //         });\r\n  //       } else {\r\n  //         if (prop.redirect) {\r\n  //           if (prop.path === this.props.location.pathname) {\r\n  //             name = prop.name;\r\n  //           }\r\n  //         } else {\r\n  //           if (prop.path === this.props.location.pathname) {\r\n  //             name = prop.name;\r\n  //           }\r\n  //         }\r\n  //       }\r\n  //       return null;\r\n  //     });\r\n  //     return name;\r\n  //   };\r\n  openSidebar = () => {\r\n    document.documentElement.classList.toggle(\"nav-open\");\r\n    this.sidebarToggle.current.classList.toggle(\"toggled\");\r\n  };\r\n  // function that adds color white/transparent to the navbar on resize (this is for the collapse)\r\n  updateColor = () => {\r\n    if (window.innerWidth < 993 && this.state.isOpen) {\r\n      this.setState({\r\n        color: \"white\",\r\n      });\r\n    } else {\r\n      this.setState({\r\n        color: \"transparent\",\r\n      });\r\n    }\r\n  };\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this.updateColor.bind(this));\r\n  }\r\n  componentDidUpdate(e) {\r\n    if (\r\n      window.innerWidth < 993 &&\r\n      document.documentElement.className.indexOf(\"nav-open\") !== -1\r\n    ) {\r\n      this.setState({ color: \"white\" });\r\n      document.documentElement.classList.toggle(\"nav-open\");\r\n      this.sidebarToggle.current.classList.toggle(\"toggled\");\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      // add or remove classes depending if we are on full-screen-maps page or not\r\n      <Navbar\r\n        color={this.state.color}\r\n        expand=\"lg\"\r\n        className={\"navbar-absolute fixed-top\"}\r\n      >\r\n        <Container fluid>\r\n          <div className=\"navbar-wrapper\">\r\n            <div className=\"navbar-toggle\">\r\n              <button\r\n                type=\"button\"\r\n                ref={this.sidebarToggle}\r\n                className=\"navbar-toggler\"\r\n                onClick={() => this.openSidebar()}\r\n              >\r\n                <span className=\"navbar-toggler-bar bar1\" />\r\n                <span className=\"navbar-toggler-bar bar2\" />\r\n                <span className=\"navbar-toggler-bar bar3\" />\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <NavbarToggler onClick={this.toggle}>\r\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n            <span className=\"navbar-toggler-bar navbar-kebab\" />\r\n          </NavbarToggler>\r\n          <Collapse\r\n            isOpen={this.state.isOpen}\r\n            navbar\r\n            className=\"justify-content-end\"\r\n          >\r\n            <Nav navbar>\r\n              <NavItem>\r\n                <Link to=\"#pablo\" className=\"nav-link\">\r\n                  <i className=\"fas fa-envelope fa-1x\" />\r\n                  <p>\r\n                    <span className=\"d-lg-none d-md-block\">Notifications</span>\r\n                  </p>\r\n                </Link>\r\n              </NavItem>\r\n              <Dropdown\r\n                nav\r\n                isOpen={this.state.dropdownOpen}\r\n                toggle={(e) => this.dropdownToggle(e)}\r\n              >\r\n                <DropdownToggle caret nav>\r\n                  <i className=\"fas fa-user fa-1x\" />\r\n                  <p>\r\n                    <span className=\"d-lg-none d-md-block\">Profile</span>\r\n                  </p>\r\n                </DropdownToggle>\r\n                <DropdownMenu right>\r\n                  <DropdownItem tag=\"a\">Settings</DropdownItem>\r\n                  <DropdownItem tag=\"a\">Sign out</DropdownItem>\r\n                </DropdownMenu>\r\n              </Dropdown>\r\n            </Nav>\r\n          </Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","E:\\Devpies\\devpies\\src\\actions\\Actions.jsx",[],"E:\\Devpies\\devpies\\src\\components\\patient-components\\AIHelp.jsx",[],"E:\\Devpies\\devpies\\src\\components\\patient-components\\Appointments.jsx",[],"E:\\Devpies\\devpies\\src\\components\\patient-components\\About.jsx",["72","73","74","75","76","77"],"E:\\Devpies\\devpies\\src\\components\\patient-components\\Hospitals.jsx",[],"E:\\Devpies\\devpies\\src\\components\\patient-components\\Settings.jsx",[],"E:\\Devpies\\devpies\\src\\index.jsx",[],"E:\\Devpies\\devpies\\src\\dictionary\\deseases.jsx",[],{"ruleId":"78","replacedBy":"79"},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","severity":1,"message":"83","line":7,"column":3,"nodeType":"84","messageId":"85","endLine":7,"endColumn":14},{"ruleId":"82","severity":1,"message":"86","line":15,"column":3,"nodeType":"84","messageId":"85","endLine":15,"endColumn":13},{"ruleId":"82","severity":1,"message":"87","line":16,"column":3,"nodeType":"84","messageId":"85","endLine":16,"endColumn":17},{"ruleId":"82","severity":1,"message":"88","line":17,"column":3,"nodeType":"84","messageId":"85","endLine":17,"endColumn":18},{"ruleId":"82","severity":1,"message":"89","line":18,"column":3,"nodeType":"84","messageId":"85","endLine":18,"endColumn":8},{"ruleId":"82","severity":1,"message":"90","line":21,"column":10,"nodeType":"84","messageId":"85","endLine":21,"endColumn":16},{"ruleId":"91","severity":1,"message":"92","line":20,"column":15,"nodeType":"93","endLine":23,"endColumn":17},{"ruleId":"91","severity":1,"message":"92","line":35,"column":15,"nodeType":"93","endLine":38,"endColumn":17},{"ruleId":"91","severity":1,"message":"92","line":51,"column":15,"nodeType":"93","endLine":54,"endColumn":17},{"ruleId":"91","severity":1,"message":"92","line":69,"column":15,"nodeType":"93","endLine":72,"endColumn":17},{"ruleId":"91","severity":1,"message":"92","line":84,"column":15,"nodeType":"93","endLine":87,"endColumn":17},{"ruleId":"91","severity":1,"message":"92","line":99,"column":15,"nodeType":"93","endLine":102,"endColumn":17},"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"no-unused-vars","'NavbarBrand' is defined but never used.","Identifier","unusedVar","'InputGroup' is defined but never used.","'InputGroupText' is defined but never used.","'InputGroupAddon' is defined but never used.","'Input' is defined but never used.","'routes' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]