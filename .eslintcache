[{"E:\\Devpies\\devpies\\src\\reportWebVitals.js":"1","E:\\Devpies\\devpies\\src\\reducers\\Reducer.jsx":"2","E:\\Devpies\\devpies\\src\\App.jsx":"3","E:\\Devpies\\devpies\\src\\components\\patient-components\\Sidebar.jsx":"4","E:\\Devpies\\devpies\\src\\utilities\\Routes.jsx":"5","E:\\Devpies\\devpies\\src\\components\\patient-components\\NavBar.jsx":"6","E:\\Devpies\\devpies\\src\\actions\\Actions.jsx":"7","E:\\Devpies\\devpies\\src\\components\\patient-components\\AIHelp.jsx":"8","E:\\Devpies\\devpies\\src\\components\\patient-components\\Appointments.jsx":"9","E:\\Devpies\\devpies\\src\\components\\patient-components\\About.jsx":"10","E:\\Devpies\\devpies\\src\\components\\patient-components\\Hospitals.jsx":"11","E:\\Devpies\\devpies\\src\\components\\patient-components\\Settings.jsx":"12","E:\\Devpies\\devpies\\src\\index.jsx":"13","E:\\Devpies\\devpies\\src\\dictionary\\deseases.jsx":"14","E:\\Devpies\\devpies\\src\\components\\patient-components\\AppointmentHeader.jsx":"15","E:\\Devpies\\devpies\\src\\components\\DoctorHome.jsx":"16","E:\\Devpies\\devpies\\src\\components\\doctor-components\\MySchedule.jsx":"17","E:\\Devpies\\devpies\\src\\components\\doctor-components\\MyAppointments.jsx":"18","E:\\Devpies\\devpies\\src\\components\\doctor-components\\MyPatients.jsx":"19","E:\\Devpies\\devpies\\src\\components\\doctor-components\\Statistics.jsx":"20","E:\\Devpies\\devpies\\src\\utilities\\DoctorRoutes.jsx":"21","E:\\Devpies\\devpies\\src\\components\\doctor-components\\NewsFeed.jsx":"22","E:\\Devpies\\devpies\\src\\components\\doctor-components\\AppointmentHeader.jsx":"23","E:\\Devpies\\devpies\\src\\utilities\\chart.js":"24","E:\\Devpies\\devpies\\src\\components\\doctor-components\\FeedbackHeader.jsx":"25","E:\\Devpies\\devpies\\src\\components\\doctor-components\\TimeTable.jsx":"26","E:\\Devpies\\devpies\\src\\components\\Login.jsx":"27","E:\\Devpies\\devpies\\src\\components\\patient-components\\PatientHome.jsx":"28","E:\\Devpies\\devpies\\src\\components\\representative-components\\RepresentativeHome.jsx":"29","E:\\Devpies\\devpies\\src\\components\\common\\GoogleMap.jsx":"30","E:\\Devpies\\devpies\\src\\components\\admin-components\\AdminHome.jsx":"31","E:\\Devpies\\devpies\\src\\utilities\\AdminRoutes.jsx":"32","E:\\Devpies\\devpies\\src\\components\\patient-components\\FileExplorer.jsx":"33","E:\\Devpies\\devpies\\src\\components\\common\\BodyScene.jsx":"34","E:\\Devpies\\devpies\\src\\components\\common\\Body.jsx":"35","E:\\Devpies\\devpies\\src\\components\\Register.jsx":"36"},{"size":362,"mtime":499162500000,"results":"37","hashOfConfig":"38"},{"size":2693,"mtime":1611522547039,"results":"39","hashOfConfig":"38"},{"size":1622,"mtime":1611593520311,"results":"40","hashOfConfig":"38"},{"size":2668,"mtime":1611067808761,"results":"41","hashOfConfig":"38"},{"size":1164,"mtime":1610545941010,"results":"42","hashOfConfig":"38"},{"size":4835,"mtime":1611046710588,"results":"43","hashOfConfig":"38"},{"size":1414,"mtime":1611599972466,"results":"44","hashOfConfig":"38"},{"size":3196,"mtime":1611590102956,"results":"45","hashOfConfig":"38"},{"size":2225,"mtime":1610549173262,"results":"46","hashOfConfig":"38"},{"size":4789,"mtime":1610538476382,"results":"47","hashOfConfig":"38"},{"size":852,"mtime":1611521030455,"results":"48","hashOfConfig":"38"},{"size":6003,"mtime":1611522206321,"results":"49","hashOfConfig":"38"},{"size":723,"mtime":1611417713375,"results":"50","hashOfConfig":"38"},{"size":13004,"mtime":1610543153824,"results":"51","hashOfConfig":"38"},{"size":1231,"mtime":1610549123890,"results":"52","hashOfConfig":"38"},{"size":1084,"mtime":1611075661827,"results":"53","hashOfConfig":"38"},{"size":1152,"mtime":1611076190017,"results":"54","hashOfConfig":"38"},{"size":2257,"mtime":1611047564756,"results":"55","hashOfConfig":"38"},{"size":230,"mtime":1611046260988,"results":"56","hashOfConfig":"38"},{"size":11979,"mtime":1611061390557,"results":"57","hashOfConfig":"38"},{"size":1220,"mtime":1611047427824,"results":"58","hashOfConfig":"38"},{"size":226,"mtime":1611046436119,"results":"59","hashOfConfig":"38"},{"size":1293,"mtime":1611047759668,"results":"60","hashOfConfig":"38"},{"size":12243,"mtime":1611056052287,"results":"61","hashOfConfig":"38"},{"size":1684,"mtime":1611060981102,"results":"62","hashOfConfig":"38"},{"size":2929,"mtime":1611076836818,"results":"63","hashOfConfig":"38"},{"size":6036,"mtime":1611517104555,"results":"64","hashOfConfig":"38"},{"size":1049,"mtime":1611514209669,"results":"65","hashOfConfig":"38"},{"size":246,"mtime":1611515710144,"results":"66","hashOfConfig":"38"},{"size":3870,"mtime":1611599294373,"results":"67","hashOfConfig":"38"},{"size":873,"mtime":1611515977840,"results":"68","hashOfConfig":"38"},{"size":1220,"mtime":1611517104577,"results":"69","hashOfConfig":"38"},{"size":2229,"mtime":1611522461535,"results":"70","hashOfConfig":"38"},{"size":621,"mtime":1611593129208,"results":"71","hashOfConfig":"38"},{"size":927,"mtime":1611593093465,"results":"72","hashOfConfig":"38"},{"size":7134,"mtime":1611594108887,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},"1168dp",{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"76"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"76"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"76"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"76"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"76"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"76"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"76"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"155","usedDeprecatedRules":"76"},"E:\\Devpies\\devpies\\src\\reportWebVitals.js",[],["156","157"],"E:\\Devpies\\devpies\\src\\reducers\\Reducer.jsx",[],"E:\\Devpies\\devpies\\src\\App.jsx",["158"],"import \"./App.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport PatientHome from \"./components/patient-components/PatientHome\";\nimport DoctorHome from \"./components/DoctorHome\";\nimport Login from \"./components/Login\";\nimport { connect } from \"react-redux\";\nimport RepresentativeHome from \"./components/representative-components/RepresentativeHome\";\nimport AdminHome from \"./components/admin-components/AdminHome\";\nimport Register from \"./components/Register\";\n\nfunction App(props) {\n  return (\n    <Router>\n      <Switch>\n        <Route\n          exact\n          path=\"/\"\n          render={() => {\n            return props.authUser !== undefined ? (\n              props.userType === \"ADMIN\" ? (\n                <DoctorHome />\n              ) : props.userType === \"USER\" ? (\n                <PatientHome />\n              ) : props.userType === \"DOCTOR\" ? (\n                <DoctorHome />\n              ) : props.userType === \"REPRESENTATIVE\" ? (\n                <RepresentativeHome />\n              ) : (\n                <Login />\n              )\n            ) : (\n              <Login />\n            );\n          }}\n        />\n        <Route\n          exact\n          path=\"/register\"\n          render={() => {\n            return <Register />;\n          }}\n        />\n      </Switch>\n    </Router>\n  );\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    ...state,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    // signIn: (authUser) => {\n    //   dispatch(signIn(authUser));\n    // },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","E:\\Devpies\\devpies\\src\\components\\patient-components\\Sidebar.jsx",[],"E:\\Devpies\\devpies\\src\\utilities\\Routes.jsx",[],"E:\\Devpies\\devpies\\src\\components\\patient-components\\NavBar.jsx",[],"E:\\Devpies\\devpies\\src\\actions\\Actions.jsx",[],"E:\\Devpies\\devpies\\src\\components\\patient-components\\AIHelp.jsx",[],"E:\\Devpies\\devpies\\src\\components\\patient-components\\Appointments.jsx",[],"E:\\Devpies\\devpies\\src\\components\\patient-components\\About.jsx",["159","160","161","162","163","164"],"import React, { Component } from \"react\";\r\n\r\nclass About extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div class=\"header text-center mt-3\">\r\n          <h2 class=\"title\">Why Devpies?</h2>\r\n          <p class=\"category mt-2 description text-center\">\r\n            Devpies is an AI based medical assistant for doctors and patients.\r\n          </p>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-12 col-md-4\">\r\n            <div class=\"card\">\r\n              <img\r\n                class=\"card-img-top\"\r\n                src=\"https://images.unsplash.com/photo-1449247709967-d4461a6a6103?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=751&q=80\"\r\n              />\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title\">Simple</h5>\r\n                <p class=\"card-text mb-3 description text-center\">\r\n                  Devpies has a user-friendly interface so you already know how\r\n                  to use it.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 col-md-4\">\r\n            <div class=\"card\">\r\n              <img\r\n                class=\"card-img-top\"\r\n                src=\"https://images.unsplash.com/photo-1551288049-bebda4e38f71?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1500&q=80\"\r\n              />\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title\">Dataset</h5>\r\n                <p class=\"card-text mb-3 description text-center\">\r\n                  Devpies has the key difference - carefully created dataset to\r\n                  get maximum accuracy.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div class=\"col-12 col-md-4\">\r\n            <div class=\"card\">\r\n              <img\r\n                class=\"card-img-top\"\r\n                src=\"https://images.unsplash.com/photo-1591604021695-0c69b7c05981?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1500&q=80\"\r\n              />\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title\">Approval</h5>\r\n                <p class=\"card-text mb-3 description text-center\">\r\n                  Devpies has an approve and positive feedback from medical\r\n                  students and doctors.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"row mt-3\">\r\n          <div class=\"col-12 col-md-4\">\r\n            <div class=\"card\">\r\n              <img\r\n                class=\"card-img-top\"\r\n                src=\"https://images.unsplash.com/photo-1579154204601-01588f351e67?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=750&q=80\"\r\n              />\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title\">Powerful</h5>\r\n                <p class=\"card-text mb-3 description text-center\">\r\n                  Devpies contains 900+ diseases and 1500+ symptoms and signs\r\n                  only for therapy.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 col-md-4\">\r\n            <div class=\"card\">\r\n              <img\r\n                class=\"card-img-top\"\r\n                src=\"https://images.unsplash.com/photo-1498050108023-c5249f4df085?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1504&q=80\"\r\n              />\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title\">Open</h5>\r\n                <p class=\"card-text mb-3 description text-center\">\r\n                  Devpies has an open API to assist doctors to diagnose diseases\r\n                  and help patients to find physician.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"col-12 col-md-4\">\r\n            <div class=\"card\">\r\n              <img\r\n                class=\"card-img-top\"\r\n                src=\"https://images.unsplash.com/photo-1588681664899-f142ff2dc9b1?ixid=MXwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHw%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=1567&q=80\"\r\n              />\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title title\">News</h5>\r\n                <p class=\"card-text mb-3 description text-center\">\r\n                  Devpies shows daily basis diseases people suffer from and\r\n                  serve them as a sort of a newsfeed.\r\n                </p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default About;\r\n","E:\\Devpies\\devpies\\src\\components\\patient-components\\Hospitals.jsx",[],"E:\\Devpies\\devpies\\src\\components\\patient-components\\Settings.jsx",[],"E:\\Devpies\\devpies\\src\\index.jsx",[],"E:\\Devpies\\devpies\\src\\dictionary\\deseases.jsx",[],"E:\\Devpies\\devpies\\src\\components\\patient-components\\AppointmentHeader.jsx",[],"E:\\Devpies\\devpies\\src\\components\\DoctorHome.jsx",[],"E:\\Devpies\\devpies\\src\\components\\doctor-components\\MySchedule.jsx",[],"E:\\Devpies\\devpies\\src\\components\\doctor-components\\MyAppointments.jsx",[],"E:\\Devpies\\devpies\\src\\components\\doctor-components\\MyPatients.jsx",[],"E:\\Devpies\\devpies\\src\\components\\doctor-components\\Statistics.jsx",["165","166"],"import React, { Component } from \"react\";\r\n\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\nimport { connect } from \"react-redux\";\r\nimport { Line, Bar, Pie, Doughnut } from \"react-chartjs-2\";\r\nimport {\r\n  dashboardShippedProductsChart,\r\n  dashboardAllProductsChart,\r\n  dashboard24HoursPerformanceChart,\r\n  pieData,\r\n  pieOptions,\r\n  pieStyles,\r\n} from \"../../utilities/chart\";\r\nimport FeebackHeader from \"./FeedbackHeader\";\r\n\r\nclass Statistics extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    let chartInstance = null;\r\n    return (\r\n      <div>\r\n        <div className=\"p-5\">\r\n          <div className=\" text-center\">\r\n            <div className=\"typography-line text-center pl-0 mb-0\">\r\n              <h5>Statistics</h5>\r\n            </div>\r\n            <p className=\"description text-center w-75 mx-auto mt-0\">\r\n              Here you will see your activity statistics.\r\n            </p>\r\n          </div>\r\n          <Row>\r\n            <Col xs={12} md={4}>\r\n              <Card className=\"card-chart\">\r\n                <CardBody>\r\n                  <div className=\"my-4\">\r\n                    <Row>\r\n                      <Col xs={12} md={4}>\r\n                        <div className=\"ml-4 color-gray\">\r\n                          <i className=\"fas fa-user fa-3x text-gray-300\"></i>\r\n                        </div>\r\n                      </Col>\r\n                      <Col xs={12} md={8}>\r\n                        <div className=\"ml-0\">\r\n                          <h4 className=\"m-0\">182</h4>\r\n                          <p className=\"color-gray\">Number of patients</p>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n            <Col xs={12} md={4}>\r\n              <Card className=\"card-chart\">\r\n                <CardBody>\r\n                  <div className=\"my-4\">\r\n                    <Row>\r\n                      <Col xs={12} md={4}>\r\n                        <div className=\"ml-4 color-gray\">\r\n                          <i className=\"fas fa-chart-line fa-3x text-gray-300\"></i>\r\n                        </div>\r\n                      </Col>\r\n                      <Col xs={12} md={8}>\r\n                        <div className=\"ml-0\">\r\n                          <h4 className=\"m-0\">53</h4>\r\n                          <p className=\"color-gray\">Search occurences</p>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n            <Col xs={12} md={4}>\r\n              <Card className=\"card-chart\">\r\n                <CardBody>\r\n                  <div className=\"my-4\">\r\n                    <Row>\r\n                      <Col xs={12} md={4}>\r\n                        <div className=\"ml-4 color-gray\">\r\n                          <i className=\"fas fa-wallet fa-3x text-gray-300\"></i>\r\n                        </div>\r\n                      </Col>\r\n                      <Col xs={12} md={8}>\r\n                        <div className=\"ml-0\">\r\n                          <h4 className=\"m-0\">$20.000</h4>\r\n                          <p className=\"color-gray\">Earnings</p>\r\n                        </div>\r\n                      </Col>\r\n                    </Row>\r\n                  </div>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n          <Row>\r\n            <Col xs={12} md={5}>\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">Customers</h5>\r\n                  <CardTitle tag=\"h5\">Patient Satisfaction</CardTitle>\r\n                  <UncontrolledDropdown>\r\n                    <DropdownToggle\r\n                      className=\"btn-round btn-outline-default btn-icon\"\r\n                      color=\"default\"\r\n                    >\r\n                      <i className=\"fas fa-ellipsis-v color-gray\" />\r\n                    </DropdownToggle>\r\n                    <DropdownMenu right>\r\n                      <DropdownItem>Refresh</DropdownItem>\r\n                      <DropdownItem className=\"text-danger\">\r\n                        Remove data\r\n                      </DropdownItem>\r\n                    </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <div className=\"my-4\">\r\n                    <h2 className=\"\">80.35%</h2>\r\n                    <div class=\"progress\" style={{ height: \"5px\" }}>\r\n                      <div\r\n                        className=\"progress-bar\"\r\n                        role=\"progressbar\"\r\n                        style={{ width: \"83%\" }}\r\n                        ariaValuenow=\"25\"\r\n                        ariaValuemin=\"0\"\r\n                        ariaValuemax=\"100\"\r\n                      ></div>\r\n                    </div>\r\n                  </div>\r\n                </CardBody>\r\n                <CardFooter>\r\n                  <div className=\"stats\">\r\n                    <i className=\"fas fa-history\" /> Just Updated\r\n                  </div>\r\n                </CardFooter>\r\n              </Card>\r\n            </Col>\r\n            <Col xs={12} md={7}>\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">Customers</h5>\r\n                  <CardTitle tag=\"h5\">Age distribution</CardTitle>\r\n                  <UncontrolledDropdown>\r\n                    <DropdownToggle\r\n                      className=\"btn-round btn-outline-default btn-icon\"\r\n                      color=\"default\"\r\n                    >\r\n                      <i className=\"fas fa-ellipsis-v color-gray\" />\r\n                    </DropdownToggle>\r\n                    <DropdownMenu right>\r\n                      <DropdownItem>Refresh</DropdownItem>\r\n                      <DropdownItem className=\"text-danger\">\r\n                        Remove data\r\n                      </DropdownItem>\r\n                    </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <div className=\"\">\r\n                    <div style={pieStyles.pieContainer}>\r\n                      <Doughnut\r\n                        data={pieData}\r\n                        options={pieOptions}\r\n                        ref={(input) => {\r\n                          chartInstance = input;\r\n                        }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </CardBody>\r\n                <CardFooter>\r\n                  <div className=\"stats\">\r\n                    <i className=\"fas fa-history\" /> Just Updated\r\n                  </div>\r\n                </CardFooter>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col xs={12} md={4}>\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">Global Sales</h5>\r\n                  <CardTitle tag=\"h5\">Shipped Products</CardTitle>\r\n                  <UncontrolledDropdown>\r\n                    <DropdownToggle\r\n                      className=\"btn-round btn-outline-default btn-icon\"\r\n                      color=\"default\"\r\n                    >\r\n                      <i className=\"fas fa-ellipsis-v color-gray\" />\r\n                    </DropdownToggle>\r\n                    <DropdownMenu right>\r\n                      <DropdownItem>Refresh</DropdownItem>\r\n                      <DropdownItem className=\"text-danger\">\r\n                        Remove data\r\n                      </DropdownItem>\r\n                    </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <div className=\"chart-area\">\r\n                    <Line\r\n                      data={dashboardShippedProductsChart.data}\r\n                      options={dashboardShippedProductsChart.options}\r\n                    />\r\n                  </div>\r\n                </CardBody>\r\n                <CardFooter>\r\n                  <div className=\"stats\">\r\n                    <i className=\"fas fa-history\" /> Just Updated\r\n                  </div>\r\n                </CardFooter>\r\n              </Card>\r\n            </Col>\r\n            <Col xs={12} md={4}>\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">2020 Sales</h5>\r\n                  <CardTitle tag=\"h5\">All products</CardTitle>\r\n                  <UncontrolledDropdown>\r\n                    <DropdownToggle\r\n                      className=\"btn-round btn-outline-default btn-icon\"\r\n                      color=\"default\"\r\n                    >\r\n                      <i className=\"fas fa-ellipsis-v color-gray\" />\r\n                    </DropdownToggle>\r\n                    <DropdownMenu right>\r\n                      <DropdownItem>Refresh</DropdownItem>\r\n                      <DropdownItem className=\"text-danger\">\r\n                        Remove data\r\n                      </DropdownItem>\r\n                    </DropdownMenu>\r\n                  </UncontrolledDropdown>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <div className=\"chart-area\">\r\n                    <Line\r\n                      data={dashboardAllProductsChart.data}\r\n                      options={dashboardAllProductsChart.options}\r\n                    />\r\n                  </div>\r\n                </CardBody>\r\n                <CardFooter>\r\n                  <div className=\"stats\">\r\n                    <i className=\"fas fa-history\" /> Just Updated\r\n                  </div>\r\n                </CardFooter>\r\n              </Card>\r\n            </Col>\r\n            <Col xs={12} md={4}>\r\n              <Card className=\"card-chart\">\r\n                <CardHeader>\r\n                  <h5 className=\"card-category\">Patients per day</h5>\r\n                  <CardTitle tag=\"h5\">1 year Performance</CardTitle>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <div className=\"chart-area\">\r\n                    <Bar\r\n                      data={dashboard24HoursPerformanceChart.data}\r\n                      options={dashboard24HoursPerformanceChart.options}\r\n                    />\r\n                  </div>\r\n                </CardBody>\r\n                <CardFooter>\r\n                  <div className=\"stats\">\r\n                    <i className=\"fas fa-history\" /> Last 7 days\r\n                  </div>\r\n                </CardFooter>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n\r\n          <div className=\" text-center\">\r\n            <div className=\"typography-line text-center pl-0 mb-0\">\r\n              <h5>Feedbacks</h5>\r\n            </div>\r\n            <p className=\"description text-center w-75 mx-auto mt-0\">\r\n              Here you will see your feedbacks\r\n            </p>\r\n          </div>\r\n\r\n          <Row>\r\n            <Col xs={12} md={12}>\r\n              {this.props.feedbacks.map((feedback) => {\r\n                return (\r\n                  <FeebackHeader\r\n                    rating={feedback.rating}\r\n                    description={feedback.description}\r\n                    user={feedback.user}\r\n                    date={feedback.date}\r\n                  ></FeebackHeader>\r\n                );\r\n              })}\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ...state,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signOut: () => {},\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Statistics);\r\n","E:\\Devpies\\devpies\\src\\utilities\\DoctorRoutes.jsx",[],"E:\\Devpies\\devpies\\src\\components\\doctor-components\\NewsFeed.jsx",[],"E:\\Devpies\\devpies\\src\\components\\doctor-components\\AppointmentHeader.jsx",[],"E:\\Devpies\\devpies\\src\\utilities\\chart.js",["167"],"/*!\r\n\r\n=========================================================\r\n* Now UI Dashboard React - v1.4.0\r\n=========================================================\r\n\r\n* Product Page: https://www.creative-tim.com/product/now-ui-dashboard-react\r\n* Copyright 2020 Creative Tim (https://www.creative-tim.com)\r\n* Licensed under MIT (https://github.com/creativetimofficial/now-ui-dashboard-react/blob/master/LICENSE.md)\r\n\r\n* Coded by Creative Tim\r\n\r\n=========================================================\r\n\r\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\r\n\r\n*/\r\n// ##############################\r\n// // // Function that converts a hex color number to a RGB color number\r\n// #############################\r\nfunction hexToRGB(hex, alpha) {\r\n  var r = parseInt(hex.slice(1, 3), 16),\r\n    g = parseInt(hex.slice(3, 5), 16),\r\n    b = parseInt(hex.slice(5, 7), 16);\r\n\r\n  if (alpha) {\r\n    return \"rgba(\" + r + \", \" + g + \", \" + b + \", \" + alpha + \")\";\r\n  } else {\r\n    return \"rgb(\" + r + \", \" + g + \", \" + b + \")\";\r\n  }\r\n}\r\n\r\n// ##############################\r\n// // // general variables for charts\r\n// #############################\r\n\r\nconst chartColor = \"#FFFFFF\";\r\n\r\n// General configuration for the charts with Line gradientStroke\r\nconst gradientChartOptionsConfiguration = {\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  tooltips: {\r\n    bodySpacing: 4,\r\n    mode: \"nearest\",\r\n    intersect: 0,\r\n    position: \"nearest\",\r\n    xPadding: 10,\r\n    yPadding: 10,\r\n    caretPadding: 10,\r\n  },\r\n  responsive: 1,\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        display: 0,\r\n        ticks: {\r\n          display: false,\r\n          maxTicksLimit: 7,\r\n        },\r\n        gridLines: {\r\n          zeroLineColor: \"transparent\",\r\n          drawTicks: false,\r\n          display: false,\r\n          drawBorder: false,\r\n        },\r\n      },\r\n    ],\r\n    xAxes: [\r\n      {\r\n        display: 0,\r\n        ticks: {\r\n          display: false,\r\n        },\r\n        gridLines: {\r\n          zeroLineColor: \"transparent\",\r\n          drawTicks: false,\r\n          display: false,\r\n          drawBorder: false,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  layout: {\r\n    padding: { left: 0, right: 0, top: 15, bottom: 15 },\r\n  },\r\n};\r\n\r\nvar gradientChartOptionsConfigurationWithNumbersAndGrid = {\r\n  maintainAspectRatio: false,\r\n  legend: {\r\n    display: false,\r\n  },\r\n  tooltips: {\r\n    bodySpacing: 4,\r\n    mode: \"nearest\",\r\n    intersect: 0,\r\n    position: \"nearest\",\r\n    xPadding: 10,\r\n    yPadding: 10,\r\n    caretPadding: 10,\r\n  },\r\n  responsive: 1,\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        gridLines: {\r\n          zeroLineColor: \"transparent\",\r\n          drawBorder: false,\r\n        },\r\n        ticks: {\r\n          maxTicksLimit: 7,\r\n        },\r\n      },\r\n    ],\r\n    xAxes: [\r\n      {\r\n        display: 0,\r\n        ticks: {\r\n          display: false,\r\n        },\r\n        gridLines: {\r\n          zeroLineColor: \"transparent\",\r\n          drawTicks: false,\r\n          display: false,\r\n          drawBorder: false,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  layout: {\r\n    padding: { left: 0, right: 0, top: 15, bottom: 15 },\r\n  },\r\n};\r\n\r\n// ##############################\r\n// // // Dashboard view - Panel chart\r\n// #############################\r\n\r\nconst dashboardPanelChart = {\r\n  data: (canvas) => {\r\n    const ctx = canvas.getContext(\"2d\");\r\n    var chartColor = \"#FFFFFF\";\r\n    var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\r\n    gradientStroke.addColorStop(0, \"#80b6f4\");\r\n    gradientStroke.addColorStop(1, chartColor);\r\n    var gradientFill = ctx.createLinearGradient(0, 200, 0, 50);\r\n    gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\r\n    gradientFill.addColorStop(1, \"rgba(255, 255, 255, 0.14)\");\r\n\r\n    return {\r\n      labels: [\r\n        \"JAN\",\r\n        \"FEB\",\r\n        \"MAR\",\r\n        \"APR\",\r\n        \"MAY\",\r\n        \"JUN\",\r\n        \"JUL\",\r\n        \"AUG\",\r\n        \"SEP\",\r\n        \"OCT\",\r\n        \"NOV\",\r\n        \"DEC\",\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"Data\",\r\n          borderColor: chartColor,\r\n          pointBorderColor: chartColor,\r\n          pointBackgroundColor: \"#2c2c2c\",\r\n          pointHoverBackgroundColor: \"#2c2c2c\",\r\n          pointHoverBorderColor: chartColor,\r\n          pointBorderWidth: 1,\r\n          pointHoverRadius: 7,\r\n          pointHoverBorderWidth: 2,\r\n          pointRadius: 5,\r\n          fill: true,\r\n          backgroundColor: gradientFill,\r\n          borderWidth: 2,\r\n          data: [50, 150, 100, 190, 130, 90, 150, 160, 120, 140, 190, 95],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: {\r\n    layout: {\r\n      padding: {\r\n        left: 20,\r\n        right: 20,\r\n        top: 0,\r\n        bottom: 0,\r\n      },\r\n    },\r\n    maintainAspectRatio: false,\r\n    tooltips: {\r\n      backgroundColor: \"#fff\",\r\n      titleFontColor: \"#333\",\r\n      bodyFontColor: \"#666\",\r\n      bodySpacing: 4,\r\n      xPadding: 12,\r\n      mode: \"nearest\",\r\n      intersect: 0,\r\n      position: \"nearest\",\r\n    },\r\n    legend: {\r\n      position: \"bottom\",\r\n      fillStyle: \"#FFF\",\r\n      display: false,\r\n    },\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            fontColor: \"rgba(255,255,255,0.4)\",\r\n            fontStyle: \"bold\",\r\n            beginAtZero: true,\r\n            maxTicksLimit: 5,\r\n            padding: 10,\r\n          },\r\n          gridLines: {\r\n            drawTicks: true,\r\n            drawBorder: false,\r\n            display: true,\r\n            color: \"rgba(255,255,255,0.1)\",\r\n            zeroLineColor: \"transparent\",\r\n          },\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          gridLines: {\r\n            display: false,\r\n            color: \"rgba(255,255,255,0.1)\",\r\n          },\r\n          ticks: {\r\n            padding: 10,\r\n            fontColor: \"rgba(255,255,255,0.4)\",\r\n            fontStyle: \"bold\",\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  },\r\n};\r\n\r\n// ##############################\r\n// // // Dashboard view - Shipped Products - Card\r\n// #############################\r\n\r\nexport const dashboardShippedProductsChart = {\r\n  data: (canvas) => {\r\n    var ctx = canvas.getContext(\"2d\");\r\n    var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\r\n    gradientStroke.addColorStop(0, \"#80b6f4\");\r\n    gradientStroke.addColorStop(1, chartColor);\r\n    var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\r\n    gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\r\n    gradientFill.addColorStop(1, \"rgba(249, 99, 59, 0.40)\");\r\n    return {\r\n      labels: [\r\n        \"Jan\",\r\n        \"Feb\",\r\n        \"Mar\",\r\n        \"Apr\",\r\n        \"May\",\r\n        \"Jun\",\r\n        \"Jul\",\r\n        \"Aug\",\r\n        \"Sep\",\r\n        \"Oct\",\r\n        \"Nov\",\r\n        \"Dec\",\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"Active Users\",\r\n          borderColor: \"#f96332\",\r\n          pointBorderColor: \"#FFF\",\r\n          pointBackgroundColor: \"#f96332\",\r\n          pointBorderWidth: 2,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 1,\r\n          pointRadius: 4,\r\n          fill: true,\r\n          backgroundColor: gradientFill,\r\n          borderWidth: 2,\r\n          data: [542, 480, 430, 550, 530, 453, 380, 434, 568, 610, 700, 630],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: gradientChartOptionsConfiguration,\r\n};\r\n\r\n// ##############################\r\n// // // Dashboard view - All Products - Card\r\n// #############################\r\n\r\nexport const dashboardAllProductsChart = {\r\n  data: (canvas) => {\r\n    var ctx = canvas.getContext(\"2d\");\r\n    var gradientStroke = ctx.createLinearGradient(500, 0, 100, 0);\r\n    gradientStroke.addColorStop(0, \"#18ce0f\");\r\n    gradientStroke.addColorStop(1, chartColor);\r\n    var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\r\n    gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\r\n    gradientFill.addColorStop(1, hexToRGB(\"#18ce0f\", 0.4));\r\n    return {\r\n      labels: [\"12pm,\", \"3pm\", \"6pm\", \"9pm\", \"12am\", \"3am\", \"6am\", \"9am\"],\r\n      datasets: [\r\n        {\r\n          label: \"Email Stats\",\r\n          borderColor: \"#18ce0f\",\r\n          pointBorderColor: \"#FFF\",\r\n          pointBackgroundColor: \"#18ce0f\",\r\n          pointBorderWidth: 2,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 1,\r\n          pointRadius: 4,\r\n          fill: true,\r\n          backgroundColor: gradientFill,\r\n          borderWidth: 2,\r\n          data: [40, 500, 650, 700, 1200, 1250, 1300, 1900],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: gradientChartOptionsConfigurationWithNumbersAndGrid,\r\n};\r\n\r\n// ##############################\r\n// // // Dashboard view - Bar Chart - Card\r\n// #############################\r\n\r\nexport const dashboard24HoursPerformanceChart = {\r\n  data: (canvas) => {\r\n    var ctx = canvas.getContext(\"2d\");\r\n    var gradientFill = ctx.createLinearGradient(0, 170, 0, 50);\r\n    gradientFill.addColorStop(0, \"rgba(128, 182, 244, 0)\");\r\n    gradientFill.addColorStop(1, hexToRGB(\"#2CA8FF\", 0.6));\r\n    return {\r\n      labels: [\r\n        \"January\",\r\n        \"February\",\r\n        \"March\",\r\n        \"April\",\r\n        \"May\",\r\n        \"June\",\r\n        \"July\",\r\n        \"August\",\r\n        \"September\",\r\n        \"October\",\r\n        \"November\",\r\n        \"December\",\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"Patients\",\r\n          backgroundColor: gradientFill,\r\n          borderColor: \"#2CA8FF\",\r\n          pointBorderColor: \"#FFF\",\r\n          pointBackgroundColor: \"#2CA8FF\",\r\n          pointBorderWidth: 2,\r\n          pointHoverRadius: 4,\r\n          pointHoverBorderWidth: 1,\r\n          pointRadius: 4,\r\n          fill: true,\r\n          borderWidth: 1,\r\n          data: [80, 99, 86, 96, 123, 85, 100, 75, 88, 90, 123, 155],\r\n        },\r\n      ],\r\n    };\r\n  },\r\n  options: {\r\n    maintainAspectRatio: false,\r\n    legend: {\r\n      display: false,\r\n    },\r\n    tooltips: {\r\n      bodySpacing: 4,\r\n      mode: \"nearest\",\r\n      intersect: 0,\r\n      position: \"nearest\",\r\n      xPadding: 10,\r\n      yPadding: 10,\r\n      caretPadding: 10,\r\n    },\r\n    responsive: 1,\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          ticks: {\r\n            maxTicksLimit: 7,\r\n          },\r\n          gridLines: {\r\n            zeroLineColor: \"transparent\",\r\n            drawBorder: false,\r\n          },\r\n        },\r\n      ],\r\n      xAxes: [\r\n        {\r\n          display: 0,\r\n          ticks: {\r\n            display: false,\r\n          },\r\n          gridLines: {\r\n            zeroLineColor: \"transparent\",\r\n            drawTicks: false,\r\n            display: false,\r\n            drawBorder: false,\r\n          },\r\n        },\r\n      ],\r\n    },\r\n    layout: {\r\n      padding: { left: 0, right: 0, top: 15, bottom: 15 },\r\n    },\r\n  },\r\n};\r\n\r\nconst chartColors = [\r\n  \"#336699\",\r\n  \"#99CCFF\",\r\n  \"#999933\",\r\n  \"#666699\",\r\n  \"#CC9933\",\r\n  \"#006666\",\r\n  \"#3399FF\",\r\n  \"#993300\",\r\n  \"#CCCC99\",\r\n  \"#666666\",\r\n  \"#FFCC66\",\r\n  \"#6699CC\",\r\n  \"#663366\",\r\n  \"#9999CC\",\r\n  \"#CCCCCC\",\r\n  \"#669999\",\r\n  \"#CCCC66\",\r\n  \"#CC6600\",\r\n  \"#9999FF\",\r\n  \"#0066CC\",\r\n  \"#99CCCC\",\r\n  \"#999999\",\r\n  \"#FFCC00\",\r\n  \"#009999\",\r\n  \"#99CC33\",\r\n  \"#FF9900\",\r\n  \"#999966\",\r\n  \"#66CCCC\",\r\n  \"#339966\",\r\n  \"#CCCC33\",\r\n  \"#003f5c\",\r\n  \"#665191\",\r\n  \"#a05195\",\r\n  \"#d45087\",\r\n  \"#2f4b7c\",\r\n  \"#f95d6a\",\r\n  \"#ff7c43\",\r\n  \"#ffa600\",\r\n  \"#EF6F6C\",\r\n  \"#465775\",\r\n  \"#56E39F\",\r\n  \"#59C9A5\",\r\n  \"#5B6C5D\",\r\n  \"#0A2342\",\r\n  \"#2CA58D\",\r\n  \"#84BC9C\",\r\n  \"#CBA328\",\r\n  \"#F46197\",\r\n  \"#DBCFB0\",\r\n  \"#545775\",\r\n];\r\n\r\nexport const pieData = {\r\n  maintainAspectRatio: false,\r\n  responsive: false,\r\n  labels: [\"20-30\", \"30-40\", \"10-20\", \"50-60\"],\r\n  datasets: [\r\n    {\r\n      data: [300, 50, 100, 50],\r\n      backgroundColor: chartColors,\r\n      hoverBackgroundColor: chartColors,\r\n    },\r\n  ],\r\n};\r\n\r\nexport const pieOptions = {\r\n  legend: {\r\n    display: true,\r\n    position: \"right\",\r\n    legendCallback: function (chart) {\r\n      // Return the HTML string here.\r\n    },\r\n  },\r\n  elements: {\r\n    arc: {\r\n      borderWidth: 0,\r\n    },\r\n  },\r\n};\r\n\r\nexport const pieStyles = {\r\n  pieContainer: {\r\n    width: \"40%\",\r\n    height: \"40%\",\r\n    top: \"50%\",\r\n    left: \"50%\",\r\n    position: \"relative\",\r\n    transform: \"translate(-50%, 0)\",\r\n    opacity: \"90%\",\r\n  },\r\n  relative: {\r\n    position: \"relative\",\r\n  },\r\n};\r\n","E:\\Devpies\\devpies\\src\\components\\doctor-components\\FeedbackHeader.jsx",["168","169","170","171","172","173"],"import React, { Component } from \"react\";\r\nimport {\r\n  Card,\r\n  CardHeader,\r\n  CardBody,\r\n  CardFooter,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  UncontrolledDropdown,\r\n  DropdownToggle,\r\n  DropdownMenu,\r\n  DropdownItem,\r\n} from \"reactstrap\";\r\n\r\nclass FeebackHeader extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <Row>\r\n        <Col xs={12} md={12}>\r\n          <Card className=\"card-chart\">\r\n            <CardHeader>\r\n              <UncontrolledDropdown>\r\n                <p className=\"color-gray\">\r\n                  <small>{this.props.date}</small>\r\n                </p>\r\n              </UncontrolledDropdown>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <div className=\"\">\r\n                <Row>\r\n                  <Col xs={12} md={2}>\r\n                    <div className=\"ml-4 color-gray\">\r\n                      <img\r\n                        src={\"https://www.w3schools.com/howto/img_avatar.png\"}\r\n                        className=\"rounded-borders\"\r\n                      />\r\n                    </div>\r\n                  </Col>\r\n                  <Col xs={12} md={8}>\r\n                    <div className=\"ml-0\">\r\n                      <h5 className=\"m-0 text-left\">{`${this.props.user.name} ${this.props.user.surname}`}</h5>\r\n                      <p className=\"color-gray text-left\">\r\n                        {this.props.description}\r\n                      </p>\r\n                    </div>\r\n                  </Col>\r\n                </Row>\r\n              </div>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FeebackHeader;\r\n","E:\\Devpies\\devpies\\src\\components\\doctor-components\\TimeTable.jsx",[],"E:\\Devpies\\devpies\\src\\components\\Login.jsx",["174","175","176"],"import React, { Component } from \"react\";\r\nimport { signIn, doSignIn, getCurrentUser } from \"../actions/Actions\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      showResponseLabel: \"\",\r\n      responseLabel: \"\",\r\n    };\r\n  }\r\n  login() {\r\n    const { email, password } = this.state;\r\n\r\n    if (email === \"\" || password === \"\") {\r\n      this.setState({\r\n        showResponseLabel: \"true\",\r\n        responseLabel: \"Fill data correctly\",\r\n      });\r\n    } else {\r\n      doSignIn(email, password)\r\n        .then((response) => {\r\n          console.log(response);\r\n          let user = {\r\n            user: { uid: 0, token: response.data },\r\n          };\r\n          this.setState({ email: \"\", password: \"\" });\r\n          return user;\r\n        })\r\n        .then((user) => {\r\n          let userDetails = getCurrentUser(user);\r\n          return userDetails;\r\n        })\r\n        .then((data) => {\r\n          this.props.signIn(data.data);\r\n        })\r\n        .catch((error) => {\r\n          //TODO: show response label\r\n          console.log(\"request failed:\");\r\n          console.log(error);\r\n          this.setState({\r\n            showResponseLabel: \"true\",\r\n            responseLabel: \"Something went wrong\",\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"container\" style={{ width: \"100%\", height: \"100%\" }}>\r\n          <div className=\"row justify-content-center\">\r\n            <div className=\"col-xl-6 \">\r\n              <div className=\"card o-hidden border-0 shadow-lg my-5\">\r\n                <div className=\"card-body p-0\">\r\n                  <div className=\"\">\r\n                    <div>\r\n                      <div className=\"p-5\">\r\n                        <div className=\"text-center\">\r\n                          <h1 className=\"h4 text-gray-900 mb-4\">{\"Login\"}</h1>\r\n                          {this.state.showResponseLabel ? (\r\n                            <h6 className=\"h6 mb-4 response-label-error\">\r\n                              {this.state.responseLabel}\r\n                            </h6>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                        </div>\r\n                        <form className=\"user\">\r\n                          <div className=\"form-group\">\r\n                            <input\r\n                              type=\"email\"\r\n                              className=\"form-control form-control-user\"\r\n                              id=\"=InputEmail\"\r\n                              aria-describedby=\"emailHelp\"\r\n                              placeholder={\"Email\"}\r\n                              value={this.state.email}\r\n                              onChange={(e) =>\r\n                                this.setState({ email: e.target.value })\r\n                              }\r\n                            />\r\n                          </div>\r\n                          <div className=\"form-group\">\r\n                            <input\r\n                              type=\"password\"\r\n                              className=\"form-control form-control-user\"\r\n                              id=\"=InputPassword\"\r\n                              placeholder={\"Password\"}\r\n                              value={this.state.password}\r\n                              onChange={(e) =>\r\n                                this.setState({ password: e.target.value })\r\n                              }\r\n                            />\r\n                          </div>\r\n                          <div className=\"form-group\">\r\n                            <div className=\"custom-control custom-checkbox small\">\r\n                              <input\r\n                                type=\"checkbox\"\r\n                                className=\"custom-control-input\"\r\n                                id=\"customCheck\"\r\n                              />\r\n                              <label\r\n                                className=\"custom-control-label\"\r\n                                htmlFor=\"customCheck\"\r\n                              >\r\n                                {\"Remember me\"}\r\n                              </label>\r\n                            </div>\r\n                          </div>\r\n                          <a\r\n                            href=\"#\"\r\n                            className=\"btn btn-primary btn-user btn-block\"\r\n                            onClick={() => this.login()}\r\n                          >\r\n                            {\"Login\"}\r\n                          </a>\r\n                          <hr />\r\n                          <a\r\n                            href=\"#\"\r\n                            className=\"btn btn-google btn-user btn-block\"\r\n                          >\r\n                            <i className=\"fab fa-google fa-fw\"></i>{\" \"}\r\n                            {\"Login with Google\"}\r\n                          </a>\r\n                        </form>\r\n                        <hr />\r\n                        <div className=\"text-center\">\r\n                          <a className=\"small\" href=\"#\">\r\n                            {\"Forgot password\"}\r\n                          </a>\r\n                        </div>\r\n                        <div className=\"text-center\">\r\n                          <a className=\"small\" href=\"register\">\r\n                            {\"Create account\"}\r\n                          </a>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ...state,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (authUser) => {\r\n      dispatch(signIn(authUser));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\r\n","E:\\Devpies\\devpies\\src\\components\\patient-components\\PatientHome.jsx",[],"E:\\Devpies\\devpies\\src\\components\\representative-components\\RepresentativeHome.jsx",[],"E:\\Devpies\\devpies\\src\\components\\common\\GoogleMap.jsx",["177"],"E:\\Devpies\\devpies\\src\\components\\admin-components\\AdminHome.jsx",["178"],"import React, { Component } from \"react\";\r\nimport { routes } from \"../../utilities/AdminRoutes\";\r\nimport { connect } from \"react-redux\";\r\nimport Sidebar from \"../patient-components/Sidebar\";\r\nimport NavBar from \"../patient-components/NavBar\";\r\n\r\nclass AdminHome extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Sidebar routes={routes} backgroundColor={\"blue\"} />\r\n\r\n        <div id=\"body\">\r\n          <main>\r\n            <NavBar></NavBar>\r\n            <div className=\"main-panel ps ps--active-y\">\r\n              <div className=\"content \">\r\n                <div className=\"pan-header\"></div>\r\n                {routes[this.props.menu].component}\r\n              </div>\r\n            </div>\r\n          </main>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminHome;\r\n","E:\\Devpies\\devpies\\src\\utilities\\AdminRoutes.jsx",[],"E:\\Devpies\\devpies\\src\\components\\patient-components\\FileExplorer.jsx",[],"E:\\Devpies\\devpies\\src\\components\\common\\BodyScene.jsx",["179","180","181","182"],"import React, { Component, useRef, Suspense } from \"react\";\r\nimport { Canvas } from \"react-three-fiber\";\r\nimport { useGLTF, OrbitControls, ContactShadows } from \"drei\";\r\nimport Body from \"./Body\";\r\n\r\nexport default function BodyScene(props) {\r\n  return (\r\n    <div style={{ height: \"60vh\" }}>\r\n      <Canvas>\r\n        <ambientLight intensity={0.5} />\r\n        <spotLight intensity={0.3} position={[5, 30, 30]} />\r\n        <spotLight intensity={0.3} position={[-5, -30, -30]} />\r\n        <Suspense fallback={null}>\r\n          <Body />\r\n        </Suspense>\r\n        <OrbitControls />\r\n      </Canvas>\r\n    </div>\r\n  );\r\n}\r\n","E:\\Devpies\\devpies\\src\\components\\common\\Body.jsx",[],"E:\\Devpies\\devpies\\src\\components\\Register.jsx",["183","184","185"],"import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  signIn,\r\n  doSignIn,\r\n  getCurrentUser,\r\n  doCreateUserWithEmailAndPassword,\r\n} from \"../actions/Actions\";\r\n\r\nconst INITIAL_STATE = {\r\n  name: \"\",\r\n  surname: \"\",\r\n  password: \"\",\r\n  email: \"\",\r\n  repeatedPassword: \"\",\r\n  contact: \"\",\r\n  address: \"\",\r\n  showResponseLabel: \"\",\r\n  responseLabel: \"\",\r\n};\r\n\r\nclass Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      ...INITIAL_STATE,\r\n    };\r\n  }\r\n  registerAccount() {\r\n    const {\r\n      name,\r\n      surname,\r\n      password,\r\n      email,\r\n      repeatedPassword,\r\n      contact,\r\n      address,\r\n    } = this.state;\r\n\r\n    if (\r\n      name === \"\" ||\r\n      surname === \"\" ||\r\n      password === \"\" ||\r\n      email === \"\" ||\r\n      password !== repeatedPassword\r\n    ) {\r\n      this.setState({\r\n        showResponseLabel: \"true\",\r\n        responseLabel: \"Fill data correctly\",\r\n      });\r\n    } else {\r\n      doCreateUserWithEmailAndPassword(\r\n        name,\r\n        surname,\r\n        password,\r\n        email,\r\n        contact,\r\n        address\r\n      )\r\n        .then((response) => {\r\n          return doSignIn(email, password);\r\n        })\r\n        .then((response) => {\r\n          console.log(response);\r\n          let user = {\r\n            user: { uid: 0, token: response.data },\r\n          };\r\n          this.setState({ email: \"\", password: \"\" });\r\n          return user;\r\n        })\r\n        .then((user) => {\r\n          let userDetails = getCurrentUser(user);\r\n          return userDetails;\r\n        })\r\n        .then((data) => {\r\n          this.props.signIn(data.data);\r\n        })\r\n        .catch((error) => {\r\n          //TODO: show response label\r\n          console.log(\"request failed:\");\r\n          console.log(error);\r\n          this.setState({\r\n            showResponseLabel: \"true\",\r\n            responseLabel: \"Something went wrong\",\r\n          });\r\n        });\r\n    }\r\n  }\r\n\r\n  login = (email, password) => {\r\n    doSignIn(email, password)\r\n      .then((response) => {\r\n        let user = { user: { uid: 0, token: response.headers.authorization } };\r\n        this.props.signIn(user);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"card o-hidden border-0 shadow-lg my-5 w-50 mx-auto\">\r\n          <div className=\"card-body p-0\">\r\n            <div>\r\n              <div>\r\n                <div className=\"p-5\">\r\n                  <div className=\"text-center\">\r\n                    <h1 className=\"h4 text-gray-900 mb-4\">Register</h1>\r\n                    {this.state.showResponseLabel ? (\r\n                      <h6 className=\"h6 mb-4 response-label-error\">\r\n                        {this.state.responseLabel}\r\n                      </h6>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </div>\r\n                  <form className=\"user\">\r\n                    <div className=\"form-group row\">\r\n                      <div className=\"col-sm-6 mb-3 mb-sm-0\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-user\"\r\n                          value={this.state.name}\r\n                          onChange={(e) => {\r\n                            this.setState({ name: e.target.value });\r\n                          }}\r\n                          placeholder={\"Name\"}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-sm-6\">\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control form-control-user\"\r\n                          value={this.state.surname}\r\n                          onChange={(e) => {\r\n                            this.setState({ surname: e.target.value });\r\n                          }}\r\n                          placeholder={\"Surname\"}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                      <input\r\n                        type=\"email\"\r\n                        className=\"form-control form-control-user\"\r\n                        value={this.state.email}\r\n                        onChange={(e) => {\r\n                          this.setState({ email: e.target.value });\r\n                        }}\r\n                        placeholder={\"Email\"}\r\n                      />\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                      <div className=\"col-sm-6 mb-3 mb-sm-0\">\r\n                        <input\r\n                          type=\"password\"\r\n                          className=\"form-control form-control-user\"\r\n                          value={this.state.password}\r\n                          onChange={(e) => {\r\n                            this.setState({ password: e.target.value });\r\n                          }}\r\n                          placeholder={\"Password\"}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-sm-6\">\r\n                        <input\r\n                          type=\"password\"\r\n                          className=\"form-control form-control-user\"\r\n                          value={this.state.repeatedPassword}\r\n                          onChange={(e) => {\r\n                            this.setState({ repeatedPassword: e.target.value });\r\n                          }}\r\n                          placeholder={\"Repeat password\"}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <a\r\n                      href=\"#\"\r\n                      className=\"btn btn-primary btn-user btn-block\"\r\n                      onClick={() => this.registerAccount()}\r\n                    >\r\n                      {\"Register Account\"}\r\n                    </a>\r\n                    <hr />\r\n                    <a href=\"#\" className=\"btn btn-google btn-user btn-block\">\r\n                      <i className=\"fab fa-google fa-fw\"></i>{\" \"}\r\n                      {\"Register using Google\"}\r\n                    </a>\r\n                  </form>\r\n                  <hr />\r\n                  <div className=\"text-center\">\r\n                    <a className=\"small\" href=\"#\">\r\n                      {\"Forgot password\"}\r\n                    </a>\r\n                  </div>\r\n                  <div className=\"text-center\">\r\n                    <a className=\"small\" href=\"/#\">\r\n                      {\"Already have an Account\"}\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    ...state,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    signIn: (authUser) => {\r\n      dispatch(signIn(authUser));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Register);\r\n",{"ruleId":"186","replacedBy":"187"},{"ruleId":"188","replacedBy":"189"},{"ruleId":"190","severity":1,"message":"191","line":8,"column":8,"nodeType":"192","messageId":"193","endLine":8,"endColumn":17},{"ruleId":"194","severity":1,"message":"195","line":20,"column":15,"nodeType":"196","endLine":23,"endColumn":17},{"ruleId":"194","severity":1,"message":"195","line":35,"column":15,"nodeType":"196","endLine":38,"endColumn":17},{"ruleId":"194","severity":1,"message":"195","line":51,"column":15,"nodeType":"196","endLine":54,"endColumn":17},{"ruleId":"194","severity":1,"message":"195","line":69,"column":15,"nodeType":"196","endLine":72,"endColumn":17},{"ruleId":"194","severity":1,"message":"195","line":84,"column":15,"nodeType":"196","endLine":87,"endColumn":17},{"ruleId":"194","severity":1,"message":"195","line":99,"column":15,"nodeType":"196","endLine":102,"endColumn":17},{"ruleId":"190","severity":1,"message":"197","line":17,"column":21,"nodeType":"192","messageId":"193","endLine":17,"endColumn":24},{"ruleId":"190","severity":1,"message":"198","line":182,"column":27,"nodeType":"192","messageId":"193","endLine":182,"endColumn":40},{"ruleId":"190","severity":1,"message":"199","line":142,"column":7,"nodeType":"192","messageId":"193","endLine":142,"endColumn":26},{"ruleId":"190","severity":1,"message":"200","line":6,"column":3,"nodeType":"192","messageId":"193","endLine":6,"endColumn":13},{"ruleId":"190","severity":1,"message":"201","line":7,"column":3,"nodeType":"192","messageId":"193","endLine":7,"endColumn":12},{"ruleId":"190","severity":1,"message":"202","line":11,"column":3,"nodeType":"192","messageId":"193","endLine":11,"endColumn":17},{"ruleId":"190","severity":1,"message":"203","line":12,"column":3,"nodeType":"192","messageId":"193","endLine":12,"endColumn":15},{"ruleId":"190","severity":1,"message":"204","line":13,"column":3,"nodeType":"192","messageId":"193","endLine":13,"endColumn":15},{"ruleId":"194","severity":1,"message":"195","line":38,"column":23,"nodeType":"196","endLine":41,"endColumn":25},{"ruleId":"205","severity":1,"message":"206","line":114,"column":27,"nodeType":"196","endLine":118,"endColumn":28},{"ruleId":"205","severity":1,"message":"206","line":122,"column":27,"nodeType":"196","endLine":125,"endColumn":28},{"ruleId":"205","severity":1,"message":"206","line":132,"column":27,"nodeType":"196","endLine":132,"endColumn":57},{"ruleId":"194","severity":1,"message":"195","line":32,"column":13,"nodeType":"196","endLine":35,"endColumn":15},{"ruleId":"190","severity":1,"message":"207","line":3,"column":10,"nodeType":"192","messageId":"193","endLine":3,"endColumn":17},{"ruleId":"190","severity":1,"message":"208","line":1,"column":17,"nodeType":"192","messageId":"193","endLine":1,"endColumn":26},{"ruleId":"190","severity":1,"message":"209","line":1,"column":28,"nodeType":"192","messageId":"193","endLine":1,"endColumn":34},{"ruleId":"190","severity":1,"message":"210","line":3,"column":10,"nodeType":"192","messageId":"193","endLine":3,"endColumn":17},{"ruleId":"190","severity":1,"message":"211","line":3,"column":34,"nodeType":"192","messageId":"193","endLine":3,"endColumn":48},{"ruleId":"205","severity":1,"message":"206","line":179,"column":21,"nodeType":"196","endLine":183,"endColumn":22},{"ruleId":"205","severity":1,"message":"206","line":187,"column":21,"nodeType":"196","endLine":187,"endColumn":79},{"ruleId":"205","severity":1,"message":"206","line":194,"column":21,"nodeType":"196","endLine":194,"endColumn":51},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"no-unused-vars","'AdminHome' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Pie' is defined but never used.","'chartInstance' is assigned a value but never used.","'dashboardPanelChart' is assigned a value but never used.","'CardFooter' is defined but never used.","'CardTitle' is defined but never used.","'DropdownToggle' is defined but never used.","'DropdownMenu' is defined but never used.","'DropdownItem' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'connect' is defined but never used.","'Component' is defined but never used.","'useRef' is defined but never used.","'useGLTF' is defined but never used.","'ContactShadows' is defined but never used.","no-global-assign","no-unsafe-negation"]